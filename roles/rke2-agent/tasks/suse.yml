---
# - name: Add required modules
#   modprobe:
#     name: "{{ item.name }}"
#     state: present
#   loop:
#     "{{ _module }}"
#   tags: rke2-agent

# - name: Setup required sysctl params
#   sysctl:
#     name: "{{ item.key }}"
#     value: "{{ item.value }}"
#     sysctl_set: yes
#     state: present
#     reload: yes
#   loop:
#     "{{ _sysctl }}"
#   tags: rke2-agent

# - name: Add repositories
#   zypper_repository:
#     state: present
#     repo: "{{ item.repo }}"
#   loop: "{{ _repo }}"
#   changed_when: false
#   tags: rke2-agent

# - name: Refresh repositories
#   zypper_repository:
#     repo: '*'
#     auto_import_keys: yes
#     runrefresh: yes
#   tags: rke2-agent

# - name: Update all packages
#   zypper:
#     name: '*'
#     state: latest
#     update_cache: yes
#   changed_when: false
#   ignore_errors: true
#   tags: rke2-agent

# - name: Install packages
#   zypper:
#     name: "{{ item.name }}"
#     state: "{{ item.state }}"
#     disable_gpg_check: yes
#     update_cache: yes
#     # extra_args: ''
#   loop: "{{ _package }}"
#   register: result
#   until: result is succeeded
#   tags: rke2-agent

# - name: just force systemd to reread configs
#   systemd:
#     daemon_reload: yes
#   tags: rke2-agent

# - name: Start and enable services
#   systemd:
#     name: "{{ item.name }}"
#     state: started
#     enabled: yes
#     daemon_reload: yes
#   loop: "{{ _service }}"
#   register: result
#   until: result is succeeded
#   tags: rke2-agent

# - name: Add /usr/local/bin to sudo secure_path
#   lineinfile:
#     line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
#     regexp: "Defaults(\s)*secure_path(\s)*="
#     state: present
#     insertafter: EOF
#     path: /etc/sudoers
#     validate: 'visudo -cf %s'
#   tags: rke2-agent

- name: Print cluster node token
  debug:
    msg: "{{ RKE2_TOKEN }}"
  tags: rke2-agent

- name: Print server address
  debug:
    msg: "{{ RKE2_URL }}"
  tags: rke2-agent

- name: ensure a directory exists
  file:
    path: /etc/rancher/rke2
    state: directory
  tags: rke2-agent

- name: set rke2 server config
  template:
    src: config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
  tags: rke2-agent

- name: Download script
  get_url:
    url: "{{ item.url }}"
    # checksum: "{{ item.checksum }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  loop: "{{ _install_script }}"
  register: result
  until: result is succeeded
  tags: rke2-agent

- name: Execute script
  shell: "INSTALL_RKE2_TYPE=agent sh {{ item.dest }}"
  become: true
  loop: "{{ _install_script }}"
  register: result
  until: result is succeeded
  tags: rke2-agent

- name: Remove script
  file:
    path: "{{ item.dest }}"
    state: absent
  loop: "{{ _install_script }}"
  register: result
  until: result is succeeded
  tags: rke2-agent

- name: Start and enable services
  systemd:
    name: "{{ item.name }}"
    state: started
    enabled: yes
    daemon_reload: yes
  loop: "{{ _service }}"
  register: result
  until: result is succeeded
  tags: rke2-agent
